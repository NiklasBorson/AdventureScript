enum Direction(North,South,East,West);
enum DoorState(None,Open,Closed,Locked);
delegate UseOnDelegate($item:Item, $target:Item);
property DoorState: DoorState;
property LinkN: Item;
property LinkS: Item;
property LinkE: Item;
property LinkW: Item;
property DoorN: Item;
property DoorS: Item;
property DoorE: Item;
property DoorW: Item;
property Location: Item;
property Description: String;
property Noun: String;
property Adj1: String;
property Adj2: String;
property Unlocks: Item;
property IsPortable: Bool;
property UseOnAction: UseOnDelegate;
item inventory;
item frontPorch;
item frontHall;
item backHall;
item laundryRoom;
item kitchen;
item diningRoom;
item livingRoom;
item link_frontPorch_frontHall_9;
item small_gold_key_10;
item link_frontHall_backHall_11;
item link_backHall_laundryRoom_12;
item link_backHall_kitchen_13;
item link_kitchen_diningRoom_14;
item link_diningRoom_livingRoom_15;
item link_livingRoom_frontHall_16;
var $location = frontHall;
function IsOpen($item:Item) => $item.DoorState == DoorState.Open || $item.DoorState == DoorState.None;
map Opposite Direction -> Direction
{
    North -> South,
    South -> North,
    East -> West,
    West -> East
}
function GetLink($item:Item, $dir:Direction) : Item
{
    switch ($dir)
    {
        Direction.North
        {
            $return = $item.LinkN;
        }
        Direction.South
        {
            $return = $item.LinkS;
        }
        Direction.East
        {
            $return = $item.LinkE;
        }
    }
}
function SetLink($item:Item, $value:Item, $dir:Direction)
{
    switch ($dir)
    {
        Direction.North
        {
            $item.LinkN = $value;
        }
        Direction.South
        {
            $item.LinkS = $value;
        }
        Direction.East
        {
            $item.LinkE = $value;
        }
    }
}
function GetDoor($item:Item, $dir:Direction) : Item
{
    switch ($dir)
    {
        Direction.North
        {
            $return = $item.DoorN;
        }
        Direction.South
        {
            $return = $item.DoorS;
        }
        Direction.East
        {
            $return = $item.DoorE;
        }
    }
}
function SetDoor($item:Item, $value:Item, $dir:Direction)
{
    switch ($dir)
    {
        Direction.North
        {
            $item.DoorN = $value;
        }
        Direction.South
        {
            $item.DoorS = $value;
        }
        Direction.East
        {
            $item.DoorE = $value;
        }
    }
}
function LinkRoomsImpl($from:Item, $to:Item, $dir:Direction) : Item
{
    var $backDir = Opposite($dir);
    SetLink($from, $to, $dir);
    SetLink($to, $from, $backDir);
    $return = NewItem($"link_{$from}_{$to}");
    SetDoor($from, $return, $dir);
    SetDoor($to, $return, $backDir);
}
function LinkRooms($from:Item, $to:Item, $dir:Direction) : Item
{
    $return = LinkRoomsImpl($from, $to, $dir);
    $return.Noun = "opening";
}
function LinkRoomsWithDoor($from:Item, $to:Item, $dir:Direction) : Item
{
    $return = LinkRoomsImpl($from, $to, $dir);
    $return.Noun = "door";
    $return.DoorState = DoorState.Closed;
}
function UseKeyOn($key:Item, $target:Item)
{
    Message("Using {$key.Noun} on {$target.Noun}.");
}
function AddKey($door:Item, $keyLocation:Item, $adj1:String, $adj2:String) : Item
{
    $return = NewItem($"{$adj1}_{$adj2}_key");
    $return.Unlocks = $door;
    $door.DoorState = DoorState.Locked;
    $return.Noun = "key";
    $return.Adj1 = $adj1;
    $return.Adj2 = $adj2;
    $return.Location = $keyLocation;
    $return.IsPortable = true;
    $return.UseOnAction = UseKeyOn;
}
function UseOn($item:Item, $target:Item) : Bool
{
    var $fn = $item.UseOnAction;
    if ($fn != null)
    {
        $fn($item, $target);
        $return = true;
    }
    else
    {
        Message("You can't use that.");
        $return = false;
    }
}
function AddItemNouns($item:Item)
{
    if ($item.Noun != "")
    {
        AddNoun($item.Noun, $item);
        AddAdjective($item.Adj1, $item);
        AddAdjective($item.Adj2, $item);
    }
}
function AddItemNounsForLocation($container:Item)
{
    foreach ($item)
    {
        if ($item.Location == $container)
        {
            AddItemNouns($item);
        }
    }
}
function Look()
{
    Message($location.Description);
    foreach ($dir:Direction)
    {
        var $door = GetDoor($location, $dir);
        if ($door != null)
        {
            Message($"To the {$dir} is a {$door.Adj1} {$door.Adj2} {$door.Noun}.");
        }
    }
    foreach ($item)
    {
        if ($item.Location == $location)
        {
            Message($"There is a {$item.Adj1} {$item.Adj2} {$item.Noun} here.");
        }
    }
}
function Go($dir:Direction)
{
    var $dest = GetLink($location, $dir);
    var $door = GetDoor($location, $dir);
    if ($dest == null)
    {
        Message($"You cannot go {$dir}.");
    }
    else ($door != null && !IsOpen($door))
    {
        Message("You can't walk through closed doors.");
    }
    else
    {
        $location = $dest;
        Look();
    }
}
function Open($door:Item)
{
    switch ($door.DoorState)
    {
        DoorState.None
        {
            Message($"You cannot open the {$door.Noun}.");
        }
        DoorState.Open
        {
            Message($"The {$door.Noun} is already open.");
        }
        DoorState.Closed
        {
            $door.DoorState = DoorState.Open;
            Message($"The {$door.Noun} is now open.");
        }
        DoorState.Locked
        {
            Message($"The {$door.Noun} is locked.");
        }
    }
}
function Close($door:Item)
{
    switch ($door.DoorState)
    {
        DoorState.None
        {
            Message($"You cannot close the {$door.Noun}.");
        }
        DoorState.Open
        {
            $door.DoorState = DoorState.Closed;
            Message($"The {$door.Noun} is now closed.");
        }
    }
}
function Inventory()
{
    foreach ($item)
    {
        if ($item.Location == inventory)
        {
            Message($"{$item.Adj1} {$item.Adj2} {$item.Noun}");
        }
    }
}
command "go {$dir:Direction}"
{
    Go($dir);
}
command "n"
{
    Go(Direction.North);
}
command "s"
{
    Go(Direction.South);
}
command "e"
{
    Go(Direction.East);
}
command "w"
{
    Go(Direction.West);
}
command "look"
{
    Look();
}
command "open {$door:Item}"
{
    Open($door);
}
command "close {$door:Item}"
{
    Close($door);
}
command "unlock {$door:Item} with {$key:Item}"
{
    if ($door.DoorState != DoorState.Locked)
    {
        Message($"The {$door.Noun} is not locked.");
    }
    else ($key.Unlocks != $door)
    {
        Message($"The {$key.Noun} doesn't unlock the {$door.Noun}.");
    }
    else
    {
        $door.DoorState = DoorState.Closed;
        Message($"The {$door.Noun} is now unlocked.");
    }
}
command "unlock {$door:Item}"
{
    if ($door.DoorState != DoorState.Locked)
    {
        Message($"The {$door.Noun} is not locked.");
    }
    else
    {
        Message($"What do you want to unlock the {$door.Noun} with?");
    }
}
command "take {$item:Item}"
{
    if ($item.Location == $location && $item.IsPortable)
    {
        $item.Location = inventory;
        Message($"You've taken the {$item.Adj1} {$item.Adj2} {$item.Noun}");
    }
    else
    {
        Message("You cannot take that.");
    }
}
command "inventory"
{
    Inventory();
}
command "i"
{
    Inventory();
}
game
{
    {
        $_ = inventory;
    }
    {
        $_ = frontPorch;
        $_.LinkN = frontHall;
        $_.DoorN = link_frontPorch_frontHall_9;
        $_.Description = "You are on a front porch.";
    }
    {
        $_ = frontHall;
        $_.LinkN = backHall;
        $_.LinkS = frontPorch;
        $_.LinkE = livingRoom;
        $_.DoorN = link_frontHall_backHall_11;
        $_.DoorS = link_frontPorch_frontHall_9;
        $_.DoorE = link_livingRoom_frontHall_16;
        $_.Description = "You are in a small entryway.";
    }
    {
        $_ = backHall;
        $_.LinkN = laundryRoom;
        $_.LinkS = frontHall;
        $_.LinkE = kitchen;
        $_.DoorN = link_backHall_laundryRoom_12;
        $_.DoorS = link_frontHall_backHall_11;
        $_.DoorE = link_backHall_kitchen_13;
        $_.Description = "You are in a back hallway.";
    }
    {
        $_ = laundryRoom;
        $_.LinkS = backHall;
        $_.DoorS = link_backHall_laundryRoom_12;
        $_.Description = "You are in a laundry room.";
    }
    {
        $_ = kitchen;
        $_.LinkE = diningRoom;
        $_.LinkW = backHall;
        $_.DoorE = link_kitchen_diningRoom_14;
        $_.DoorW = link_backHall_kitchen_13;
        $_.Description = "You are in a kitchen.";
    }
    {
        $_ = diningRoom;
        $_.LinkS = livingRoom;
        $_.LinkW = kitchen;
        $_.DoorS = link_diningRoom_livingRoom_15;
        $_.DoorW = link_kitchen_diningRoom_14;
        $_.Description = "You are in a dining room.";
    }
    {
        $_ = livingRoom;
        $_.LinkN = diningRoom;
        $_.LinkW = frontHall;
        $_.DoorN = link_diningRoom_livingRoom_15;
        $_.DoorW = link_livingRoom_frontHall_16;
        $_.Description = "You are in a living room.";
    }
    {
        $_ = link_frontPorch_frontHall_9;
        $_.DoorState = DoorState.Locked;
        $_.Noun = "door";
        $_.Adj1 = "red";
    }
    {
        $_ = small_gold_key_10;
        $_.Location = laundryRoom;
        $_.Noun = "key";
        $_.Adj1 = "small";
        $_.Adj2 = "gold";
        $_.Unlocks = link_frontPorch_frontHall_9;
        $_.IsPortable = true;
        $_.UseOnAction = UseKeyOn;
    }
    {
        $_ = link_frontHall_backHall_11;
        $_.Noun = "opening";
    }
    {
        $_ = link_backHall_laundryRoom_12;
        $_.DoorState = DoorState.Closed;
        $_.Noun = "door";
    }
    {
        $_ = link_backHall_kitchen_13;
        $_.Noun = "opening";
    }
    {
        $_ = link_kitchen_diningRoom_14;
        $_.Noun = "opening";
    }
    {
        $_ = link_diningRoom_livingRoom_15;
        $_.Noun = "opening";
    }
    {
        $_ = link_livingRoom_frontHall_16;
        $_.Noun = "opening";
    }
}
turn
{
    foreach ($dir:Direction)
    {
        var $door = GetDoor($location, $dir);
        if ($door != null)
        {
            AddAdjective($"{$dir}", $door);
            AddItemNouns($door);
        }
    }
    AddItemNounsForLocation($location);
    AddItemNounsForLocation(inventory);
}
